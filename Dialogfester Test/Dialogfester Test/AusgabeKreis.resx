<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhtAC0AIcAAAQCBISCZMTCnJyihOTitERCNLSyjNTSpGRiTJSSdOzyxGRypJymrLS2tNTarCQi
        HHyGlMTKpHRyXKSqjOTqvJyelLy6lMzSvIyKbFRSRPz6xJyafDQyJLzCvOTixGxqVKyurLy+vNTavMTK
        vHx6ZBQWFKSihNTStPTyxHR+pLS2vKyqnLy+pISKhFxaRMTGnOTmtLS2nKSmrNzarISKrMzKpKyqhOzq
        vLy+lNTSvJyefDw6LGxuVPT2xISGbExKPLS2lNTWrJSWdGxypLS6rCwqJHR2XJSarIyOdPz+zHx+ZBwe
        FKSmhFxeTKSqtNzetMzOpKyujOzuvNTWvAwKDISCbMTCpJyilOTivERGPLSylNTSrGRmVHyCrLy6nIyK
        dFRWRPz6zJyahDQ2LMTGvOTmxGxqXKyutNzexMzOvBwaFNTWtPTyzHR+rLS6vIyKhFxaTMTGpOTmvKSm
        tNzatISOrKyqjLy+nJyehDw+NGxuXPT2zJSWfGx2pLS6tCwuJJyerHR2ZHx+bKSmjMzOrOzuxNTWxAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAACHACwAAAAAtAC0AAAI/wCTCBxIsKDBgwgTKlzIsKHDhxAj
        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
        jfu5L+u5PGtnopscThkQADs=
</value>
  </data>
</root>