<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALwAAADFCAYAAADuZJiiAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAk
        6AAAJOgBgmMFHAAAFrJJREFUeF7t3YmzVdWVB+D+e1Qcook4ZEIRgwTFIZ10uqI4j4maRE3AMaOC0ZiU
        Jk5g0lZipaormk66y/AEARlURISoD1CG9wAVnkOipGmT2r3WPnvfu8856+x75j2uqlXCI6bKdz9Wrd/d
        9+3zLyxWrIAqgo8VVEXwsYKqCD5WUBXBxwqqIvhYQVUEHyuoiuBjBVURfKygKoKPFVRF8LGCqgg+VlAV
        wccKqiL4WEFVBB8rqIrgYwVVEXysoCqCjxVURfCxgqoI3saamkj3+LPFzf83u8W/GGtURfCmSsW86v6k
        nzinfv/27KTx/2fwlyH+RchWBN91ZWFTWJv0b2UL8FTLvwCxIvjWSwJf9UA3wNUeBZ3qwOFH8G0UBw64
        H/8aDbPtLjPVR3Wg8CP4OjWY4h1PcLXbQJ7tANFH8GVLAu8TOXYX0NVeCf89AVUErysTkzzbXWKXHdCk
        j+CpMo0cW0Lnv84A7aIDeQszgpdlA3Ls1ETP/r7DDmS1ieA59AdofH11DjX1tR46gCkfLnjcW//zGhpg
        X02ipr7WUy9/UHxz/K2wwNuytsim0JnsX50nvlH+VhjgbYOuNgXPVD92Dvv4wF7xTfOz/AZvNXTZBDxT
        vXQem/rjI+Kb52f5Cd5W6APkahPwTPX9Z7Jdd/0r+8eBfeIb6V/5B358JY3NZNuMXO3757IdPzybvfc/
        S8U307/yBzy+60JhM9muQBe97dZZ7M3vzWUTd/+7+Kb6V+6Dt359oXFZ14/OZdtunsneuP0MtvNH58Ba
        42d4dRe8zYEUm0Jlc/98Ntu68BS2/dbT2ZvfP9Pb8OomeBvXF9kOrTBqj3/38wB+Btt2y2nsjTvmsN13
        fdnL8OoWeCfeZlSbxmVd/2w2gP8cG18A6G8+lW2/7Qs8vG5+4hfiG+9PuQPeiVBKNQHMsh7/DmBH8HzK
        nzIIr/uf8u+jBvaDt3Gqk7CxEZD6awf6Z18A8J8doN+6ANYaGV5/fK534dVu8M5MdcQj/+lQ3wfYb/pM
        CvxwrTmd7fjBWWzqT4+KF8OPshe8bdhJ5G73+I2fTsDfhOChB2uNv+HVPvA2rTA55GrTiFzpj38wIwEv
        0VNT/vbZPLxuWwfDx5OyCzxip+D13SRw2TQgp/q+09n4DSenwfMpL8B7HF7tAW96hSFxy86iKfq6A33f
        LMB+kgAv0HPw6SnPw+stEF7vwPB6njfh1Q7w1mInwGj/zPL+KWD/9okCvEQ/Yq3B9+QhvL7rSXg1D96G
        cDoSOfaoP7e8JXbZ5JRH8NC58PpFtnvRV8QL5naZBW/yo7wp5NgEEl8asX/rBICOrYJXp3x+rUmm/Ewe
        XvEDZR/v3yNeOHfLHHhTkz0HXTYBxYfm2Kcn4Dl6OeUL1ho1vCJ4GV6/P5cd+MND4sVzt8yAN4GdRK42
        gcX1/ulpbPybiF02NeWza4065QH8ILzOYbs8CK/9g7dqshNIfOl7EfvxSWvBE1O+MLzOg/C6RLyQbla/
        4E0G1FCgQ398B4CV2Hkr4AvXGnXKI3joQXiFtQbD6/cwvP6beDHdrP7AmzxUCgQ6e2QOYAew13+qAHyZ
        KZ9da+SUV8Oru2tNf+ApiF12aqLLJpD40oB9/PpPJtg5+Ax6FXzhlFfWGjK8Jj8N5XJ47Qd8n6sMCV1t
        Aovrfe9MgV0BX3nKZ9ea9JRPhdc7v+TsB8q6B98HdhJ2tgkorjdM9f/DFeY6gI6dA59BrwVPTHldeP1v
        N8Nr9+ApoG03CRw7i4T6mqONU/2640Sr4LPoFfBthNdbZ/HwOrHYzfDaLfi+VhktdN2fOdg41W8HkAPs
        o8Cr6CX4oimvX2twyuNPQ23nV3mc6+Q9lN2Cp3C23YWQ1T+j/tzBvmcme/3aY0Wr4DXoOwiv8iqPA//1
        sHih3anuwHc93UnQ1Nc86IeTqT7EXgE8R6+Arzvl5VrDw2vy01C77nTvHsruwLf1U0sIN/v7kU2gcbQP
        3X4yey0FfdjjWvQq+Ax6LXhiyheF1x/Oc+4eyu7Aq0ibNomaahqNk33Pqey1b3wiaQJ70jrwWfQK+Frh
        VYBXwuubPLx+VbzgblQ34NtcZ0jYVBNoXGxYXw7dBlNdYud9bAH6KuBV9BJ80ZQvWGsy4VVe5eFSeLUP
        POLN/l7bBBoXG6D/L0B/FYDLTqEnwWOXRN80vGbXGiW8unQPZTfg6+zvErD668ImwLjaAvpfvg7IsQV2
        CnzzKa+ArzzlETz0YK1RwqtDD1EwC15FnP092QQYVxug//3WBLpsLXhsErwN4dWdhyiYA0+CpprA4nIL
        6FsAN7YKnqMH2IXoCexJ68Ar6LPgWwuvc9m6hfPEi293mdvhSdxqE1hcbgF98zXHsC3XJNgp9Popb1d4
        Td1D+SM37qHsBnzRZ99V0Nnf8yaguNyA/OAtJ7FXrj6GvQLQEXvSAF1Br4Ln6AX2PHhoEvyotUZB38Va
        w8PrWU6E127AYxVBJ5vA4nI/fAaHvgmgY3Pw0EPw6SmfA48NuEn0gLv5lFfA59aaUVMewUMT4dWFeyi7
        A/80hBgSd7YJMC42IP8QkL981dGD3nQ19hB82SlfO7ymwGfRq+Az6NuY8rcl91Ae3LJWALCzOgP/z3dg
        n1tyLmCgkKtN4HGlHzqD94c3n8g2XnkU9NFsIwF+gD4FfsSUB9iF6AnsSevAK+h14Dl6Ab5GeN1v+U9D
        dTfhoQ78fgljj5wFOCjosglItjcg/9vCE9mGK47i/RJgx86CHzXlvQqvjtxD2Sl4nPKv3ziXsXvnABQK
        u2wClU0tJvlfAfkLlx/JXsS+4kgCfPGUp9ea8lM+DR6aBG84vMqHKFgcXjsFj7Xjtq+yzd88nbGfzAY8
        biF/f8EJvNdfNo09f9mRHDsFXjflN3H0Fq41HL0Cvs3wuujLbOfOnUKAXdU5+I9eXste/fYctvEbp7Dn
        r/o0Y3fPooGZbpzii2ew9757Alt7yRFs3aXTeK/H5uChBXj9lK+21ujQOxle+VUe9j5EoXPwuNZsXXAu
        23TdaezFqz/L1l1xInvu0uMB10xAhqsOga/rfhBwQ099Zzrv1RcfwZ6DXgPQsRH82ksV9BK8ZsoPwRev
        NdZN+VrhVQGvhlcEL8OrxfdQdg4ea+rJJWzLt2azl77+efb8lSezNZcBsks+yZ69+Fi24sJjGLvrVOhT
        EogU0LotYLO7ZrD9N01nB6CfvfBwthJ61UVJr8YW4CV6Dh5aBS/XmtSUB/AvCvBNprzZ8KqAbzG82noP
        ZS/g/8HD65ns5WtPZS9c9Rm29vITYMp/iq28+Di24qJj2PILj2Zj849iyy6YxpadP439+fwj2Fs3TOfN
        7pxR3ABZ9ts3Tuf9DvTYBYexZ0Qvn5/0ivmHc+wS/EoBnqO/+PAU+OyUT601Zac8IKemfNW1hqMX2PPg
        oUnwpsOrvQ9R6AU81r7f/ZKH1w3XfI6tv+IkmPLHs1U45S/6BAf/DIAfu+DIAXjsp792eKYPS/Wfsc9P
        epnoMewC8CsE+NyUB/Bl1ho55QvBa6Z8cOGV30Np30MUegOfDa845VfzKZ+sNcvnw5RH8DDlm4Dn6AF6
        Fv0KzZSn1hqJfgBenfIC/BB987XGnpNXCb7MlM+vNTjlk6s87LyHsjfwGF63EeF11SXHFU75p3Po0+CL
        0FPgs1OeWmtieBWtgufoBXgPwmtv4LGmfk+HVznlB+AbTnm51kj0ywV6asoPwHP06SnPwUOr4OVaUye8
        JmtN8ZR3PrzKtSZ3D6U9U75X8MnJa7XwWmXKS/Cjpjy11sgpT601TcOrBK9OeXqtKZ7ytdca4+F1nlXh
        tVfwWPnwOt2/8CrAF095F8OrAK/9QJky5XGtEeHVpnsoewcfw+uoKQ/Y257yKfACPQleRS/Ba6a85j15
        W8Nr7+BleH3F0fBaa60JOLwO76G0I7z2Dh5r6sml3oZXCV435cMKr+IqD0vCqxHwdU5eY3gtAx6aBG9B
        eMV7KC14iIIR8Fg+hNey4IunvK/hVYCX4XVwD6X58GoMfAyvo6Y8YG97yqfAC/Qk+Az6OmuNQL9VhFd5
        lYfpeyiNgU/C63lWh9fW1xrD4bWVtaZwymvWGiW8Thl+iIIx8Fg+nrxmweumPBVei8BXm/KWhdfcPZTm
        prxR8P/cv4+9flMMr8Vrjafh1eA9lEbBY8XwmoDva62xIrzebe4hCsbBq+H1BSvDKz3lB+BV9AL8EP3o
        tWb0lAfstaZ80VpjQ3g9x9haYxy8Cyevra81PoTXOmuNBeHVOHisvk9eB+AFep/DKwW+v/CK4KGJ8Lrb
        0EMUrADPT155eJ3JXrg6htcqU77P8LoV/9l0yg/C69ls8xO/EAL6KyvAY5kPr9ACfG7K9xFee15r6kx5
        Dr618GrmIQrWgOfh9YYYXoun/BB8a1M+BV6gJ8En6NPgi6Z8Fnx6ypt+iII14Hl4XRhPXtuY8qXBG11r
        zNxDaQ14rL5PXgfgBXqXwmsOPDbgJtET2JMuCZ6jH4Lf2mp47fchClaB5z/zGsNrCnzn4TUFXoNeWWva
        m/LJQxT6vIfSKvBYb8XwysE3XWty6AnsSZcEn53yKniOXoAvE17Fe/IyvPb5EAXrwPsdXqkpXy28quCr
        Tfn2Tl7rrTViyvO1xtxDFKwDH09e25vyafDQBHYOvmJ4lWtNaso3DK99XeVhHXisd59cyv7iRXgdTvne
        wivALkRPYE+6JHiOvqPwuugrvTxEwUrw8eQ1D97W8Dpyymvek8cpvw2n/OAqjz1CQHdlJXis5uG1GLx2
        yg/AQwvwuSnfcnjtcq3JoSewJ90CeI5egC/6aaii8NrTPZTWgj8Yw6t2ym/BBtzVp3zZn4YS6LPgc+in
        j5jy2bVGTHm51vT8EAVrwceTVz143ZSvvdYYDa/9PETBWvBYePIaw2safRnwHD3ALkRPYE+6JHiOXgHf
        Vnjt4SEKVoPPnryui+HVcHhVwWfQj5rymvAqfxqqj3sorQaPFdLJqw3htclak6AH7By9AF8hvG7n4fXM
        TsOr9eBNhVfdWlMuvIopD9iza40efdXwOgRfbcrbGl67vYfSevAxvOrB66a8u+F1Hnu3o3sorQeP1fzk
        tSR4gX4AXqBvL7wWg9dNeZfCK73WFE15BTwPr93fQ+kE+OzJ67rLccrH8FoGvYvh9Y0Ow6sT4LF4eL3e
        jvDKwUOr4GN4HYKnp3zJtYaHV/kQhfav8nAGvLfhFcDT6G0LrwXgBfoB+KbhVb2HsoPw6gx4O8JrZsoL
        8J2tNaGH1w4eouAMeKypJx08ec2sNQn6YvC6Ke9ueB015XXhtd17KJ0Cj1N+3MGT18FaU2fKK+CNTPkU
        eIF+AF5Bn1proOusNbnw2v5DFJwCj9U8vBaD1075AfjMWgOtgo/hdQg+PeVV8CXWGiW8tnkPpXPgwzt5
        rTblm4RXCnx/4RXBQ1PhtcWHKDgHPoZXPXjdlO8jvA7BZ6Z8xfCKa00qvLb0EAXnwGPpT14V8KGE15Lg
        OXqAXYiewJ50SfAcvQK+MLyq4LNTPr3WDO6hXHCWePWblZPg8eRVhtcXHTp5DTW8Fk/5LPjslBcfKGvx
        HkonwWPF8JqAbzrlS4NvI7xWXGsG78lDeN3RUnh1FvyhtyZHhNd21prslK8bXjl46LZOXqu8J19pyhPY
        ky4JPjflE/DlpzyChybCa/IQhWZT3lnwWCF+bFiCV6d8b2uNofDKr/IQD1H4cPMa8erXK6fBu/Kx4TXq
        lK8YXl+qMuVLgufoAXYhegJ70iXBc/QK+Fx4FeAN3EPpNHh58rqpKLzie/IxvLY75VPgBXoSfAvhla81
        mfD642bh1WnwWDG8JuCbTvnS4A2sNcMPlCX3UB56e1K8+tXLefCH3t7j1MkrBw9dLrwm4NPo64fXHHhs
        wE2iJ7AnXRJ8Dn0CvvyUR/ByyqfD6wcbV4pXv3o5Dx6Lh9frZ8XwKlsBr0NvXXjVvic/vIfy/Q31H6Dg
        Bfh3n7L9tuEEvS/htTR46BT4wZQH7By9AF8xvP59327xylcvL8CPPHmN4dWD8ArgRXhtUl6Ax2p+YVMx
        eO2UH4CHVsFDq+BjeC0DXqIH8BI9EV6blDfg3T15za410AI8R8/DK4W+xfAKsAvRE9iTLgmeo1fANwyv
        U88/I17xeuUNeKxceL2s7/CamfICvG6tcTq8psBr0LcYXiN4pew/eY3hVQWvD6/5tWbiN/eIV7p+eQV+
        5MkrTPmx+Qn4EMNr/YcoaNCnwAv0BPhm78kn6KfWj4lXun55BR4rhtcEfNUpb+o9eT7lS4TXid/cK17h
        ZuUdeDx5fc3Tjw1vING7E163NpjyTXd3Wd6BxyoXXuutNbWmvACvW2sahVcFvDrlqbVGh95UeC2c8gL8
        1Pp2sGN5Cb75yWtN8AJ9e+F1WjH4KlO+JHiOHmAXoiewc/BtrDUcvQCfCa9tlpfg5cmr/mPDmfCaAq9H
        L8Fz9ICcnvL0WqOb8mR4FeDbnPJNwisFPr/WCPRZ8NBV15o2pzuWl+CxYnhNwFed8jaF1zbelcmWt+Dx
        5NW38DoEP3rKmw+vAj055RXwuQ+UJei7wI7lLXis7Qu/FNbJqwJenfLUWqNDbzq8doUdy2vw9l/Y1EJ4
        FeAT9O6H18nHm5+m6spr8OV+5rXr8HoYudbopnyo4XXy8Z+IV6678ho8lsvhtdZaUxBee1trak75PrBj
        eQ8+htc8+jLgOXqAXYiewJ50FrxAr5nyk//RD3Ys78FjbY8nr/1OeQo8gR7BT63rLqBSFQT49556rGF4
        rQleoG8jvCbgR4fX4rVGQV8SPEcPsCuDL7nW9I0dKwjwtU5eK6CX4Dl6QF405cuuNRK9z+F1au0y8er0
        W0GAx0qF1ytjeDUVXidgXz+4Z5d4VfqvYMDbEV7LT3kOHtrV8EqBn/j13eLVMFfBgMeSJ68bug6vCnjt
        lBfg5ZSn1hpfwqupFSZbQYHPnryujeG1FHiOHmBXBg9THqe6yRUmW0GBr3XyWgG9BD9qypddayR668Pr
        tXR4nVrb/7swoyoo8FgxvBaD1035KmvNbsumulrBgU/C6xcbhNdy4LNTvnl4zX+grFx4zYAn0JcBz9ED
        7EL0AvsBC6e6WsGBx5InrzG8tjflbZ7qagUJPnvyGsNrOfAcvcAuwe/+lRvQZQUJvt7Jqwpej16CHzXl
        y641En2X4TUNHhpwk+CxBfgDlrzVWKWCBI8Vw2safJW1Zs8ffi2+i+5VsOA7C6/YCvjslHf55HUnrC8f
        ObS+UBUseKztN8eT1zJT3gfosoIGrz957evCpvSUH4BX0FPg5ZRPwHcTXnd4BF1W0OD1J68w5QMNr+84
        GEbLVtDgsd763YMxvAL0Nx/zb5pTFTz40MPrG48tZh8GAF1W8OCx9j7xQFDhdfvSsJCrFcFD4ZQ3H14T
        8BL9ALyCvunJa8jQZUXwog7u3e1leN26BJBPho1crQheqY8Avb3hVUx5BXzRWjMOyP82uVP8V8VSK4In
        at+aZ6wIr9RaI9Fz8NA45V9/dDHb+9yyiLxERfAFtXfNGJt8bszK8PoqAMf+awReuSL4EjWxegwgKmtN
        j+F1yyOLeE+uXhaBt1ARfIX6AMLfLoCHvfGhxQR4PXoJnprymx5exF4R/QHAxo7VfkXwDet9gPn+xE62
        c9WyXL/00CLe2a/zf0egjrD7rQg+VlAVwccKqiL4WEFVBB8rqIrgYwVVEXysoCqCjxVURfCxgqoIPlZA
        xdj/A/MuiA++fpafAAAAAElFTkSuQmCC
</value>
  </data>
</root>